CREATE TABLE USERS(
  USER_ID NUMBER NOT NULL PRIMARY KEY,
  FIRST_NAME VARCHAR2(100) NOT NULL, 
  LAST_NAME VARCHAR2(100) NOT NULL, 
  YEAR_OF_BIRTH INTEGER, 
  MONTH_OF_BIRTH INTEGER, 
  DAY_OF_BIRTH INTEGER, 
  GENDER VARCHAR2(100)
);

CREATE TABLE FRIENDS(
  USER1_ID NUMBER,
  USER2_ID NUMBER,
  PRIMARY KEY (USER1_ID,USER2_ID),
  FOREIGN KEY (USER1_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE,
  FOREIGN KEY (USER2_ID) REFERENCES USERS(USER_ID)
  ON DELETE CASCADE
);

CREATE TABLE CITIES(
CITY_ID INTEGER NOT NULL PRIMARY KEY,
CITY_NAME VARCHAR2(100), 
STATE_NAME VARCHAR2(100), 
COUNTRY_NAME VARCHAR2(100)
);
CREATE SEQUENCE CITY_ID_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER C_I
BEFORE INSERT ON CITIES 
FOR EACH ROW
BEGIN
  SELECT CITY_ID_SEQUENCE.NEXTVAL
  INTO :new.CITY_ID
  FROM dual;
END;
/

CREATE TABLE USER_CURRENT_CITY(
  USER_ID NUMBER PRIMARY KEY,
  CURRENT_CITY_ID INTEGER,
  FOREIGN KEY (USER_ID) REFERENCES USERS,
  FOREIGN KEY (CURRENT_CITY_ID) REFERENCES CITIES(CITY_ID)
);

CREATE TABLE USER_HOMETOWN_CITY(
  USER_ID NUMBER PRIMARY KEY,
  HOMETOWN_CITY_ID INTEGER,
  FOREIGN KEY (USER_ID) REFERENCES USERS,
  FOREIGN KEY (HOMETOWN_CITY_ID) REFERENCES CITIES(CITY_ID)
);

CREATE TABLE MESSAGE(
  MESSAGE_ID INTEGER NOT NULL PRIMARY KEY,
  SENDER_ID NUMBER, 
  RECEIVER_ID NUMBER, 
  MESSAGE_CONTENT VARCHAR2(2000), 
  SENT_TIME TIMESTAMP,
  FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID)
);
CREATE SEQUENCE MESSAGE_ID_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER M_I
BEFORE INSERT ON MESSAGE 
FOR EACH ROW
BEGIN
  SELECT MESSAGE_ID_SEQUENCE.NEXTVAL
  INTO :new.MESSAGE_ID
  FROM dual;
END;
/

CREATE TABLE PROGRAMS(
  PROGRAM_ID INTEGER NOT NULL PRIMARY KEY,
  INSTITUTION VARCHAR2(100), 
  CONCENTRATION VARCHAR2(100), 
  DEGREE VARCHAR2(100)
);
CREATE SEQUENCE PROGRAM_ID_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER P_I
BEFORE INSERT ON PROGRAMS 
FOR EACH ROW
BEGIN
  SELECT PROGRAM_ID_SEQUENCE.NEXTVAL
  INTO :new.PROGRAM_ID
  FROM dual;
END;
/

CREATE TABLE EDUCATION(
  USER_ID NUMBER NOT NULL,
  PROGRAM_ID INTEGER NOT NULL,
  PROGRAM_YEAR INTEGER,
  PRIMARY KEY (USER_ID,PROGRAM_ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS,
  FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS
);

CREATE TABLE USER_EVENTS(
  EVENT_ID NUMBER NOT NULL PRIMARY KEY, 
  EVENT_CREATOR_ID NUMBER NOT NULL,
  EVENT_NAME VARCHAR2(100) NOT NULL, 
  EVENT_TAGLINE VARCHAR2(100), 
  EVENT_DESCRIPTION VARCHAR2(100), 
  EVENT_HOST VARCHAR2(100) NOT NULL, 
  EVENT_TYPE VARCHAR2(100) NOT NULL,
  EVENT_SUBTYPE VARCHAR2(100) NOT NULL, 
  EVENT_LOCATION VARCHAR2(100),
  EVENT_CITY_ID INTEGER NOT NULL, 
  EVENT_START_TIME TIMESTAMP NOT NULL, 
  EVENT_END_TIME TIMESTAMP NOT NULL,
  FOREIGN KEY (EVENT_CITY_ID) REFERENCES CITIES(CITY_ID),
  FOREIGN KEY (EVENT_CREATOR_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE PARTICIPANTS(
  EVENT_ID NUMBER,
  USER_ID NUMBER,
  CONFIRMATION VARCHAR2(100) NOT NULL,
  PRIMARY KEY (EVENT_ID, USER_ID),
  FOREIGN KEY (EVENT_ID) REFERENCES USER_EVENTS,
  FOREIGN KEY (USER_ID) REFERENCES USERS,
  CONSTRAINT chk_CONFIRMATION CHECK (CONFIRMATION IN ('ATTENDING','DECLINED','UNSURE','NOT-REPLIED'))
);

CREATE TABLE PHOTOS(
  PHOTO_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
  ALBUM_ID VARCHAR2(100) NOT NULL, 
  PHOTO_CAPTION VARCHAR2(2000), 
  PHOTO_CREATED_TIME TIMESTAMP NOT NULL, 
  PHOTO_MODIFIED_TIME TIMESTAMP NOT NULL, 
  PHOTO_LINK VARCHAR2(2000) NOT NULL
);

CREATE TABLE ALBUMS(
  ALBUM_ID VARCHAR2(100) NOT NULL PRIMARY KEY, 
  ALBUM_OWNER_ID NUMBER NOT NULL,
  ALBUM_NAME VARCHAR2(100) NOT NULL, 
  ALBUM_CREATED_TIME TIMESTAMP NOT NULL, 
  ALBUM_MODIFIED_TIME TIMESTAMP NOT NULL, 
  ALBUM_LINK VARCHAR2(2000) NOT NULL, 
  ALBUM_VISIBILITY VARCHAR2(100) NOT NULL,
  COVER_PHOTO_ID VARCHAR2(100) NOT NULL,
  FOREIGN KEY (ALBUM_OWNER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (COVER_PHOTO_ID) REFERENCES PHOTOS(PHOTO_ID),
  CONSTRAINT chk_VISIBILITY CHECK (ALBUM_VISIBILITY IN ('EVERYONE','FRIENDS_OF_FRIENDS','FRIENDS','MYSELF','CUSTOM'))
);


ALTER TABLE PHOTOS
  ADD CONSTRAINT P_A 
  FOREIGN KEY (ALBUM_ID)
REFERENCES ALBUMS(ALBUM_ID);

CREATE TABLE TAGS(
  TAG_PHOTO_ID VARCHAR2(100) NOT NULL,
  TAG_SUBJECT_ID NUMBER NOT NULL, 
  TAG_CREATED_TIME TIMESTAMP, 
  TAG_X NUMBER,
  TAG_Y NUMBER,
  PRIMARY KEY (TAG_PHOTO_ID,TAG_SUBJECT_ID),
  FOREIGN KEY (TAG_SUBJECT_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (TAG_PHOTO_ID) REFERENCES PHOTOS(PHOTO_ID) 
);